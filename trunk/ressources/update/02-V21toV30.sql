--SET MULTI_THREADED 1;

-- Suppression de 2 tables obsolète
DROP TABLE IF EXISTS ARCHERSFFTA;
DROP TABLE IF EXISTS ENTITEFFTA;

-- Ajout de la table de répartition des archers en phases finale

CREATE TABLE REPARTITION_PHASE_FINALE (
		NUM_REPARTITION_PHASE_FINALE SMALLINT NOT NULL,
		NUM_TYPE_REPARTITION SMALLINT NOT NULL,
		NUM_ORDRE SMALLINT NOT NULL,
		PRIMARY KEY (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION)
	);
-- Réglement Internationnal
-- Groupe A
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(0, 1, 1);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(1, 1, 64);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(2, 1, 33);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(3, 1, 32);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(4, 1, 17);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(5, 1, 48);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(6, 1, 49);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(7, 1, 16);
--Groupe B
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(8, 1, 9);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(9, 1, 56);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(10, 1, 41);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(11, 1, 24);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(12, 1, 25);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(13, 1, 40);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(14, 1, 57);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(15, 1, 8);
--Groupe C
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(16, 1, 5);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(17, 1, 60);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(18, 1, 37);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(19, 1, 28);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(20, 1, 21);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(21, 1, 44);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(22, 1, 53);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(23, 1, 12);
-- Groupe D
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(24, 1, 13);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(25, 1, 52);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(26, 1, 45);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(27, 1, 20);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(28, 1, 29);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(29, 1, 36);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(30, 1, 61);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(31, 1, 4);
-- Groupe E
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(32, 1, 3);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(33, 1, 62);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(34, 1, 35);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(35, 1, 30);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(36, 1, 19);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(37, 1, 46);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(38, 1, 51);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(39, 1, 14);
--Groupe F
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(40, 1, 11);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(41, 1, 54);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(42, 1, 43);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(43, 1, 22);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(44, 1, 27);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(45, 1, 38);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(46, 1, 59);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(47, 1, 6);
-- Groupe G
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(48, 1, 7);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(49, 1, 58);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(50, 1, 39);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(51, 1, 26);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(52, 1, 23);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(53, 1, 42);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(54, 1, 55);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(55, 1, 10);
-- Groupe H
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(56, 1, 15);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(57, 1, 50);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(58, 1, 47);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(59, 1, 18);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(60, 1, 31);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(61, 1, 34);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(62, 1, 63);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(63, 1, 2);

-- Réglement Français
-- Groupe A
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(0, 2, 44);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(1, 2, 21);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(2, 2, 53);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(3, 2, 12);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(4, 2, 37);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(5, 2, 28);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(6, 2, 60);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(7, 2, 5);
--Groupe B
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(8, 2, 45);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(9, 2, 20);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(10, 2, 52);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(11, 2, 13);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(12, 2, 36);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(13, 2, 29);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(14, 2, 61);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(15, 2, 4);
--Groupe C
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(16, 2, 41);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(17, 2, 24);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(18, 2, 56);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(19, 2, 9);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(20, 2, 40);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(21, 2, 25);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(22, 2, 57);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(23, 2, 8);
-- Groupe D
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(24, 2, 48);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(25, 2, 17);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(26, 2, 49);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(27, 2, 16);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(28, 2, 33);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(29, 2, 32);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(30, 2, 64);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(31, 2, 1);
-- Groupe E
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(32, 2, 2);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(33, 2, 63);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(34, 2, 31);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(35, 2, 34);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(36, 2, 15);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(37, 2, 50);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(38, 2, 18);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(39, 2, 47);
--Groupe F
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(40, 2, 7);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(41, 2, 58);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(42, 2, 26);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(43, 2, 39);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(44, 2, 10);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(45, 2, 55);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(46, 2, 23);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(47, 2, 42);
-- Groupe G
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(48, 2, 3);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(49, 2, 62);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(50, 2, 30);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(51, 2, 35);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(52, 2, 14);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(53, 2, 51);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(54, 2, 19);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(55, 2, 46);
-- Groupe H
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(56, 2, 6);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(57, 2, 59);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(58, 2, 27);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(59, 2, 38);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(60, 2, 11);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(61, 2, 54);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(62, 2, 22);
INSERT INTO REPARTITION_PHASE_FINALE (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION, NUM_ORDRE) VALUES(63, 2, 43);

-- Localisation des données de référence en base
CREATE TABLE IF NOT EXISTS LIBELLE (
		ID_LIBELLE UUID NOT NULL DEFAULT RANDOM_UUID(),
		LANG VARCHAR(5),
		LIBELLE VARCHAR(255),
		PRIMARY KEY (ID_LIBELLE, LANG)
	);

-- Table des civilités
CREATE TABLE IF NOT EXISTS CIVILITY (
		ID_CIVILITY UUID NOT NULL DEFAULT RANDOM_UUID(),
		ABREVIATION VARCHAR(10),
		LIBELLE VARCHAR(64),
		MORALE BOOLEAN NOT NULL DEFAULT FALSE,
		LANG VARCHAR(5),
		PRIMARY KEY (ID_CIVILITY)
	);
INSERT INTO CIVILITY (ABREVIATION,LIBELLE,LANG) VALUES ('M.', 'Monsieur', 'fr');
INSERT INTO CIVILITY (ABREVIATION,LIBELLE,LANG) VALUES ('Mme', 'Madame', 'fr');
INSERT INTO CIVILITY (ABREVIATION,LIBELLE,LANG) VALUES ('Mlle', 'Mademoiselle', 'fr');
INSERT INTO CIVILITY (ABREVIATION,LIBELLE,LANG) VALUES ('Dr.', 'Docteur', 'fr');
INSERT INTO CIVILITY (ABREVIATION,LIBELLE,LANG) VALUES ('Me', 'Maître', 'fr');

-- Changement de la clé primaire de la table entité
-- Ajouts et modification de colonnes  
ALTER TABLE ENTITE DROP PRIMARY KEY;
ALTER TABLE ENTITE ADD ID_ENTITE UUID NOT NULL DEFAULT RANDOM_UUID() BEFORE AGREMENTENTITE;
ALTER TABLE ENTITE ADD PRIMARY KEY (ID_ENTITE);
ALTER TABLE ENTITE ADD REMOVABLE BOOLEAN NOT NULL DEFAULT 0;
ALTER TABLE ENTITE ALTER COLUMN AGREMENTENTITE VARCHAR(32);
ALTER TABLE ENTITE ADD NUMFEDERATION INTEGER NOT NULL DEFAULT 2 BEFORE NOMENTITE;
ALTER TABLE ENTITE ALTER COLUMN NUMFEDERATION INTEGER NOT NULL; --On enlève le default après avoir mis à jour les enregistrements existant
CREATE INDEX IF NOT EXISTS I_AGREMENT_ENTITE ON ENTITE (AGREMENTENTITE ASC, NUMFEDERATION ASC);

-- Gestion des contacts. Les archers hérite désormais de la table contact
CREATE TABLE IF NOT EXISTS CONTACT (
		ID_CONTACT UUID NOT NULL DEFAULT RANDOM_UUID(),
		NAME VARCHAR(128),
		FIRSTNAME VARCHAR(128),
		ID_CIVILITY UUID,
		ADDRESS VARCHAR(255),
		ZIP_CODE VARCHAR(10),
		CITY VARCHAR(64),
		NOTE TEXT,
		ID_ENTITE UUID,
		PRIMARY KEY (ID_CONTACT),
		FOREIGN KEY (ID_CIVILITY) REFERENCES CIVILITY (ID_CIVILITY) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_ENTITE) REFERENCES ENTITE (ID_ENTITE) ON UPDATE CASCADE ON DELETE CASCADE
	);
CREATE INDEX IF NOT EXISTS I_NAME ON CONTACT (NAME ASC);
CREATE INDEX IF NOT EXISTS I_FIRSTNAME ON CONTACT (FIRSTNAME ASC);

-- Coordonnées associées aux contacts
CREATE TABLE IF NOT EXISTS COORDINATE (
		ID_COORDINATE UUID NOT NULL DEFAULT RANDOM_UUID(),
		ID_CONTACT UUID NOT NULL,
		CODE_COORDINATE_TYPE VARCHAR(16),
		"VALUE" VARCHAR(64),
		PRIMARY KEY (ID_COORDINATE),
		FOREIGN KEY (ID_CONTACT) REFERENCES CONTACT (ID_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
-- Catégories de contacts
CREATE TABLE IF NOT EXISTS CATEGORIE_CONTACT (
		NUM_CATEGORIE_CONTACT INTEGER AUTO_INCREMENT NOT NULL,
		ID_LIBELLE UUID NOT NULL,
		PRIMARY KEY (NUM_CATEGORIE_CONTACT)
	);
	
-- Tables des villes
CREATE TABLE VILLE (
	    CODE_VILLE UUID DEFAULT RANDOM_UUID(),
	    INSEE VARCHAR(5) NOT NULL,
	    NOM VARCHAR(100),
	    ALTITUDE VARCHAR(25),
	    LONGITUDE_RADIAN VARCHAR(50),
	    LATITUDE_RADIAN VARCHAR(50),
	    POP99 VARCHAR(25),
	    SURFACE VARCHAR(25),
	    PAYS VARCHAR(2),
	    PRIMARY KEY(CODE_VILLE)
	);  
CREATE INDEX IF NOT EXISTS I_VILLE_NOM ON VILLE (NOM ASC);

CREATE TABLE IF NOT EXISTS CODE_POSTAL (
		CODE_POSTAL VARCHAR(5),
		CODE_VILLE UUID NOT NULL,
		PRIMARY KEY (CODE_POSTAL,CODE_VILLE),
		FOREIGN KEY(CODE_VILLE) REFERENCES VILLE (CODE_VILLE) ON DELETE CASCADE ON UPDATE CASCADE
	);

SET @NEW_UUID = RANDOM_UUID();
INSERT INTO LIBELLE VALUES (@NEW_UUID,'fr','Archer(e)');
INSERT INTO LIBELLE VALUES (@NEW_UUID,'en','Bowman');
INSERT INTO CATEGORIE_CONTACT (NUM_CATEGORIE_CONTACT,ID_LIBELLE) VALUES (1,@NEW_UUID);
SET @NEW_UUID = RANDOM_UUID();
INSERT INTO LIBELLE VALUES (@NEW_UUID,'fr','Président(e)');
INSERT INTO LIBELLE VALUES (@NEW_UUID,'en','President');
INSERT INTO CATEGORIE_CONTACT (NUM_CATEGORIE_CONTACT,ID_LIBELLE) VALUES (2,@NEW_UUID);
SET @NEW_UUID = RANDOM_UUID();
INSERT INTO LIBELLE VALUES (@NEW_UUID,'fr','Secrétaire');
INSERT INTO LIBELLE VALUES (@NEW_UUID,'en','Secretary');
INSERT INTO CATEGORIE_CONTACT (NUM_CATEGORIE_CONTACT,ID_LIBELLE) VALUES (3,@NEW_UUID);
SET @NEW_UUID = RANDOM_UUID();
INSERT INTO LIBELLE VALUES (@NEW_UUID,'fr','Trésorier(e)');
INSERT INTO LIBELLE VALUES (@NEW_UUID,'en','Treasurer');
INSERT INTO CATEGORIE_CONTACT (NUM_CATEGORIE_CONTACT,ID_LIBELLE) VALUES (4,@NEW_UUID);
SET @NEW_UUID = RANDOM_UUID();
INSERT INTO LIBELLE VALUES (@NEW_UUID,'fr','Résponsable Inscription');
INSERT INTO LIBELLE VALUES (@NEW_UUID,'en','Registration Manager');
INSERT INTO CATEGORIE_CONTACT (NUM_CATEGORIE_CONTACT,ID_LIBELLE) VALUES (5,@NEW_UUID);
SET @NEW_UUID = RANDOM_UUID();
INSERT INTO LIBELLE VALUES (@NEW_UUID,'fr','Divers');
INSERT INTO LIBELLE VALUES (@NEW_UUID,'en','Diverse');
INSERT INTO CATEGORIE_CONTACT (NUM_CATEGORIE_CONTACT,ID_LIBELLE) VALUES (6,@NEW_UUID);

-- lien entre contacts et categories. Un contact peut être associé à plusieur catégories
CREATE TABLE IF NOT EXISTS ASSOCIER_CATEGORIE_CONTACT (
		ID_CONTACT UUID NOT NULL,
		NUM_CATEGORIE_CONTACT INTEGER NOT NULL,
		PRIMARY KEY (ID_CONTACT, NUM_CATEGORIE_CONTACT),
		FOREIGN KEY (ID_CONTACT) REFERENCES CONTACT (ID_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (NUM_CATEGORIE_CONTACT) REFERENCES CATEGORIE_CONTACT (NUM_CATEGORIE_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE
	);

-- on modifie la structure des tables
-- ajout de la localisation au niveau de la base
ALTER TABLE PARAM ADD DEFAULT_LANG VARCHAR(5) NOT NULL DEFAULT 'fr';
ALTER TABLE PARAM ADD DBUUID UUID NOT NULL DEFAULT RANDOM_UUID();
-- Suppression des index sur des champs sur le  point d'être supprimé
DROP INDEX IF EXISTS I_NOM_ARCHER;
DROP INDEX IF EXISTS I_PRENOM_ARCHER;
-- La clé primaire de table de liaison entre archers et critère pose des problème
-- en modification, donc on place les données dans une table temporaire
-- puis on supprime complétement la table pour la recréer avec la nouvelle structure
-- une fois les tables parente modifié.
CREATE LOCAL TEMPORARY TABLE TEMP_DISTINGUER AS SELECT * FROM DISTINGUER;
DROP TABLE DISTINGUER;
-- modification de la clé primaire de la table archers
ALTER TABLE ARCHERS DROP PRIMARY KEY;
ALTER TABLE ARCHERS ADD ID_CONTACT UUID NOT NULL DEFAULT RANDOM_UUID() BEFORE NUMLICENCEARCHER;
ALTER TABLE ARCHERS ADD PRIMARY KEY (ID_CONTACT);
ALTER TABLE ARCHERS ALTER COLUMN NUMLICENCEARCHER VARCHAR(32);
CREATE INDEX IF NOT EXISTS I_NUMLICENCEARCHER ON ARCHERS (NUMLICENCEARCHER ASC);
CREATE INDEX IF NOT EXISTS IT_ARCHERS_AGREMENT_ENTITE ON ARCHERS (AGREMENTENTITE ASC);
CREATE INDEX IF NOT EXISTS IT_ENTITE_AGREMENT_ENTITE ON ENTITE (AGREMENTENTITE ASC);
-- On remplit la table des contacts
INSERT INTO CONTACT (ID_CONTACT,NAME,FIRSTNAME,ID_ENTITE) SELECT ID_CONTACT,NOMARCHER,PRENOMARCHER,ENTITE.ID_ENTITE FROM ARCHERS INNER JOIN ENTITE ON ENTITE.AGREMENTENTITE=ARCHERS.AGREMENTENTITE;
DROP INDEX IF EXISTS IT_ARCHERS_AGREMENT_ENTITE;
DROP INDEX IF EXISTS IT_ENTITE_AGREMENT_ENTITE;
-- Une fois les données cohérente, on fait le lien d'héritage entre contact et archer
ALTER TABLE ARCHERS ADD FOREIGN KEY (ID_CONTACT) REFERENCES CONTACT (ID_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE;
-- suppression des champs obsolète
ALTER TABLE ARCHERS DROP COLUMN NOMARCHER;
ALTER TABLE ARCHERS DROP COLUMN PRENOMARCHER;
ALTER TABLE ARCHERS DROP COLUMN AGREMENTENTITE;

-- Ajout du type de réglement (cible ou nature)
ALTER TABLE REGLEMENT ADD TYPEREGLEMENT VARCHAR(10) NOT NULL DEFAULT 'TARGET' BEFORE REMOVABLE;

-- regénération et population de la table de liaison des critères de l'archers avec la nouvelle
-- clé primaire
CREATE TABLE DISTINGUER (
		ID_CONTACT UUID NOT NULL,
		NUMREGLEMENT INTEGER NOT NULL,
		NUMCRITERIASET INTEGER NOT NULL,
		PRIMARY KEY (ID_CONTACT, NUMREGLEMENT, NUMCRITERIASET),
		FOREIGN KEY (NUMREGLEMENT) REFERENCES REGLEMENT (NUMREGLEMENT) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (NUMCRITERIASET) REFERENCES CRITERIASET (NUMCRITERIASET) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_CONTACT) REFERENCES ARCHERS (ID_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE
	);
INSERT INTO DISTINGUER (ID_CONTACT, NUMREGLEMENT, NUMCRITERIASET) SELECT A.ID_CONTACT,NUMREGLEMENT,NUMCRITERIASET FROM TEMP_DISTINGUER D INNER JOIN ARCHERS A ON A.NUMLICENCEARCHER=D.NUMLICENCEARCHER;
DROP TABLE TEMP_DISTINGUER;

-- Comme dans les versions antérieurs de la base il n'y avait que des archers
-- on associe tous les contact présent en base à la catégorie "archer"
INSERT INTO ASSOCIER_CATEGORIE_CONTACT (ID_CONTACT, NUM_CATEGORIE_CONTACT) SELECT ID_CONTACT, 1 FROM CONTACT;

-- Réglement: Ajout du nombre de points par flèche
ALTER TABLE REGLEMENT ADD NBPOINTSPARFLECHE INTEGER DEFAULT 10;