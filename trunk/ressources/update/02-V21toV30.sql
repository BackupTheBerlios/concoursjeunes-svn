SET AUTOCOMMIT OFF;
SET MULTI_THREADED 1;

DROP TABLE ARCHERSFFTA;
DROP TABLE ENTITEFFTA;

CREATE TABLE IF NOT EXISTS CIVILITY (
		ID_CIVILITY UUID NOT NULL DEFAULT RANDOM_UUID(),
		ABREVIATION VARCHAR(10),
		LIBELLE VARCHAR(64),
		PRIMARY KEY (ID_CIVILITY)
	);
INSERT INTO CIVILITY (ABREVIATION,LIBELLE) VALUES ('M.', 'Monsieur');
INSERT INTO CIVILITY (ABREVIATION,LIBELLE) VALUES ('Mme', 'Madame');
INSERT INTO CIVILITY (ABREVIATION,LIBELLE) VALUES ('Mlle', 'Mademoiselle');
INSERT INTO CIVILITY (ABREVIATION,LIBELLE) VALUES ('Dr.', 'Docteur');
INSERT INTO CIVILITY (ABREVIATION,LIBELLE) VALUES ('Me', 'Maître');

CREATE TABLE IF NOT EXISTS CONTACT (
		ID_CONTACT UUID NOT NULL DEFAULT RANDOM_UUID(),
		NAME VARCHAR(128),
		FIRSTNAME VARCHAR(128),
		ID_CIVILITY UUID,
		ADDRESS VARCHAR(255),
		ZIP_CODE VARCHAR(10),
		CITY VARCHAR(64),
		NOTE TEXT,
		PRIMARY KEY (ID_CONTACT),
		FOREIGN KEY (ID_CIVILITY) REFERENCES CIVILITY (ID_CIVILITY) ON UPDATE CASCADE ON DELETE CASCADE
	);
CREATE INDEX IF NOT EXISTS I_NAME ON CONTACT (NAME ASC);
CREATE INDEX IF NOT EXISTS I_FIRSTNAME ON CONTACT (FIRSTNAME ASC);

CREATE TABLE IF NOT EXISTS COORDINATE (
		ID_COORDINATE UUID NOT NULL DEFAULT RANDOM_UUID(),
		ID_CONTACT UUID NOT NULL,
		CODE_COORDINATE_TYPE VARCHAR(10),
		"VALUE" VARCHAR(64),
		PRIMARY KEY (ID_COORDINATE),
		FOREIGN KEY (ID_CONTACT) REFERENCES CONTACT (ID_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
ALTER TABLE ENTITE ADD ID_ENTITE UUID NOT NULL DEFAULT RANDOM_UUID() BEFORE AGREMENTENTITE;
ALTER TABLE ENTITE ALTER COLUMN AGREMENTENTITE VARCHAR(32);
CREATE INDEX IF NOT EXISTS I_AGREMENT_ENTITE ON ENTITE (AGREMENTENTITE ASC);

-- on modifie la structure des tables
ALTER TABLE ARCHERS ADD ID_CONTACT UUID NOT NULL DEFAULT RANDOM_UUID() BEFORE NUMLICENCEARCHER;
ALTER TABLE ARCHERS ALTER COLUMN NUMLICENCEARCHER VARCHAR(32);
ALTER TABLE ARCHERS ADD ID_ENTITE UUID NULL BEFORE AGREMENTENTITE;
CREATE INDEX IF NOT EXISTS I_NUMLICENCEARCHER ON ARCHERS (NUMLICENCEARCHER ASC);

-- On remplit la table des contacts
INSERT INTO CONTACT (ID_CONTACT,NAME,FIRSTNAME) SELECT ID_CONTACT,NOMARCHER,PRENOMARCHER FROM ARCHERS;
UPDATE ARCHERS SET ID_ENTITE = (SELECT ID_ENTITE FROM ENTITE WHERE ENTITE.AGREMENTENTITE=ARCHERS.AGREMENTENTITE);

-- on regénére la table de liaison
CREATE LOCAL TEMPORARY TABLE TEMP_DISTINGUER AS SELECT * FROM DISTINGUER;

DROP TABLE DISTINGUER;
CREATE TABLE DISTINGUER (
		ID_CONTACT UUID NOT NULL,
		NUMREGLEMENT INTEGER NOT NULL,
		NUMCRITERIASET INTEGER NOT NULL,
		PRIMARY KEY (ID_CONTACT, NUMREGLEMENT, NUMCRITERIASET),
		FOREIGN KEY (NUMREGLEMENT) REFERENCES REGLEMENT (NUMREGLEMENT) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (NUMCRITERIASET) REFERENCES CRITERIASET (NUMCRITERIASET) ON UPDATE CASCADE ON DELETE CASCADE
	);
INSERT INTO DISTINGUER (ID_CONTACT, NUMREGLEMENT, NUMCRITERIASET) SELECT ID_CONTACT,NUMREGLEMENT,NUMCRITERIASET FROM TEMP_DISTINGUER D INNER JOIN ARCHERS A ON A.NUMLICENCEARCHER=D.NUMLICENCEARCHER;
DROP TABLE TEMP_DISTINGUER;

-- On refait les liens et index et purge les données obsolete
DROP INDEX IF EXISTS I_NOM_ARCHER;
DROP INDEX IF EXISTS I_PRENOM_ARCHER;
ALTER TABLE ARCHERS DROP COLUMN NOMARCHER;
ALTER TABLE ARCHERS DROP COLUMN PRENOMARCHER;
ALTER TABLE ARCHERS DROP COLUMN AGREMENTENTITE;
ALTER TABLE ENTITE DROP PRIMARY KEY;
ALTER TABLE ENTITE ADD PRIMARY KEY (ID_ENTITE);
ALTER TABLE ARCHERS DROP PRIMARY KEY;
ALTER TABLE ARCHERS ADD PRIMARY KEY (ID_CONTACT);
ALTER TABLE ARCHERS ADD FOREIGN KEY (ID_CONTACT) REFERENCES CONTACT (ID_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE ARCHERS ADD FOREIGN KEY (ID_ENTITE) REFERENCES ENTITE (ID_ENTITE) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE DISTINGUER ADD FOREIGN KEY (ID_CONTACT) REFERENCES ARCHERS (ID_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE;

COMMIT;
SET AUTOCOMMIT ON;